# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:

    # checkout code
    - uses: actions/checkout@v4

    # setup python
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    # Cache dependencies
    - name: Cache Python packages
      uses: actions/cache@v3 
      with:
        path: ~/.cache/pip # put cach in this folder in linux
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }} # using system.os (linux) and hash of requirement.txt file as a cach key
        restore-keys: |   # used to restore previous cache in case of minor changes
          ${{ runner.os }}-pip-


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

#    - name: Run testing
#      run: |
#            python -m unittest discover


    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

        
    - name: Building docker image
      run : |
          docker build -t 01111215596/docker_image  .  



    # - name: pushing docker image to dockers hup
    #   run : |
    #       docker push  01111215596/docker_image  
